//ANGULO ENTRE DOIS VETORES
function setup() {
  createCanvas(800, 800);
}

function draw() {
  
  let vecA =  createVector(width/2,height/2);
  let vecB = createVector(mouseX,mouseY);
  let vecRelativo = createVector ( (-( 400 - mouseX )), ( 400 - mouseY ));
  
  background(50);
  quadrado_pseudo_referencia(500,500);
  eixos();
  
  drawVec(vecA,vecB);  
  noStroke();
  xCentroQuadrado = (-( 400 - mouseX ));
  yCentroQuadrado = ( 400 - mouseY );
  //textoMouse = ( 'X: ' + xCentroQuadrado + " " + 'Y: ' + yCentroQuadrado);
  textoMouse = ( pseudoAngulo(vecRelativo));
  text(textoMouse,mouseX + 10, mouseY + 10);

}

function normaVetor(a){
  return sqrt(a.x*a.x + a.y*a.y);
}


function prodEscalar(a,b){
  return a.x * b.x + a.y + b.y;
}

function prodVetorial(a,b){
  return ( ( a.x * b.y)  - ( b.x * a.y) );
}

//todo : testar
function anguloEntreVetoresProdVetorial(a,b){
  prodV = prodVetorial(v1,v2);
  normaV1 = normaVetor(v1);
  normaV2 = normaVetor(v2);
  return asin(  prodV / (normaV1 * normaV2) );
}

function anguloEntreVetoresProdEscalar(v1,v2){
  prodE = prodEscalar(v1,v2);
  normaV1 = normaVetor(v1);
  normaV2 = normaVetor(v2);
  return acos( ( prodE /  ( normaV1 * normaVetor(v2) ) ) );
}

function drawVec(v1,v2){
  line(v1.x,v1.y,v2.x,v2.y)
}

function pseudoAngulo(vec){
  
  if( vec.y >= 0 ){
     if(  vec.x >= 0 ){
       if(vec.x >= vec.y){
         return vec.y/vec.x
       }
        return ( 2 - ( vec.x/vec.y) )
     } 
     if(-(vec.x) <= vec.y){
        return ( 2 + ( -(vec.x)/(vec.y) ) )
     }
    return 4 - ( vec.y/-(vec.x) )
  }
  if ( vec.x < 0 ){
     if ( -(vec.x) >= -(vec.y) ){
       return 4 + ( -(vec.y)/-(vec.x) )
     }
    return 6 - ( -(vec.y)/-(vec.x) );
  }
  if(vec.x <= - (vec.y)){
     return 6 + ( vec.x / - ( vec.y ) )
     }
  return 8 - ( -(vec.y)/vec.x )
        
}

function quadrado_pseudo_referencia(s_height,s_width){
  
  strokeWeight(3);
  stroke(255);
  noFill();
  rect(height/2 - s_height/2,width/2-s_width/2,s_height,s_width);
  
  fill(255);
  strokeWeight(0);
  text("(+1,+1)",width/2 + 255,150);
  text("(-1,+1)",150 - 45,150);
  text("(-1,-1)",150 - 45,height - 145);
  text("(+1,-1)",width/2 + 255,height - 145);
}

function eixos(){
  
  let breathe = 40;
  
  // Y - Ordenadas
  strokeWeight(3);
  stroke(230,0,0);
  line(width/2,0 + breathe,width/2,height - breathe);
  line(width/2,height - breathe,width/2 - 10, height - breathe - 10);
  line(width/2,height - breathe,width/2 + 10, height - breathe - 10);
  
  //  X - Abcissas
  strokeWeight(3);
  stroke(0,90,180);
  line(0 + breathe,height/2,width - breathe,height/2)
  line(width - breathe,height/2, width - breathe - 10 ,height/2 - 10);
  line(width - breathe,height/2, width - breathe - 10 ,height/2 + 10);
  
}